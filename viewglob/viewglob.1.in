.TH VIEWGLOB 1 "@RELEASE_DATE@" "" "Viewglob Manual"
.SH NAME
viewglob \- convenience wrapper script for the Viewglob package
.SH SYNOPSIS
.B viewglob
.RI [ options ]

.SH DESCRIPTION
\fIViewglob\fP supervises interactive shell activity and tracks file selections and globs in a graphical display showing the contents of relevant directories.
.PP
The \fIviewglob\fP command is a convenience wrapper for two other programs in the Viewglob package which do the actual work,
.BR vgseer (1)
and
.BR vgd (1).
You will want to use those programs directly to do things that are non-simple.

.SH OPTIONS
This program follows the usual GNU command line syntax, with long options starting with two dashes.  A summary is included below.
.TP
.B \-h, \-\-host=<name>
Connect a new vgseer process to a vgd process on the given host.  You should only specify this if you are not connecting to your local machine.
.TP
.B \-p, \-\-port=<number>
Connect a new vgseer process to a vgd process on the given port.  If it is a local connection and there is no vgd active on the port, one will be started.  The default port for Viewglob is 16108 (1-GLOB).
.TP
.B \-c, \-\-shell\-mode=<name>
Shell to be used.  \fIname\fP can be \*(lqbash\*(rq or \*(lqzsh\*(rq (default is bash).
.TP
.B \-t, \-\-shell\-star=<on/off>
Show or hide the asterisk character which is usually at the beginning of a vgseer shell prompt.
.TP
.B \-d, \-\-display=<vgmini|vgclassic|[path]>
Display program.  The Viewglob package comes with \fIvgclassic\fP and \fIvgmini\fP (the new display).  Though there aren't any other displays in existence at this point, one could be used by passing its path.  The default is vgmini.
.TP
.B \-s, \-\-sort\-style=<windows|ls>
In the display, sort files with directories first (Windows) or purely by name (ls).  ls mode is the default.
.TP
.B \-r, \-\-dir\-order=<descending|ascending|ascending\-pwd\-first>
In the display, list directories in descending order (the default), ascending (last referenced directory has the top listing), or ascending with the current directory always first.
.TP
.B \-z, \-\-font\-size\-modifier=<+/\-##>
Increase or decrease the base font size in the display by the given number.  E.g. \*(lq\-z +2\*(rq increases the window manager's default by 2, while \*(lq\-z \-2\*(rq decreases the default by 2.
.TP
.B \-i, \-\-file\-icons=<on/off>
Show or hide the file type icons in the display.
.TP
.B \-H, \-\-help
Show summary of options.
.TP
.B \-V, \-\-version
Show the version of the package.

.SH USAGE
When you start Viewglob, you'll be presented with your familiar prompt and a new window showing the file layout of the current directory.  As you begin to type a command, the display window will highlight to show potential filename completions (dull highlight) and file selections and globs/expansions (vibrant highlight).  Also, as you reference other directories (e.g. \fI../\fP or \fI/usr/local/\fP), their layouts will appear as well.
.PP
At the bottom of the display is the command line.  This is what Viewglob is actually basing its results on; if you find the display is not showing what you expected, check to make sure the display's command line is the same as the one in the shell, as they can be different (see \fBNOTES\fP below).
.PP
With a few exceptions, any text you type into the display is passed to the terminal as input.  So if you wished, you could use the display as your interface to the shell \-\- this actually works quite well if you're doing a lot of file management.  Arrow keys, Page Up, Page Down, Home, and End are interpreted by the display and not passed to the terminal.
.PP
\fBDisplay Navigation\fP
.RS 4
You can navigate the display from the terminal by pressing C\-g (Ctrl\-G) followed by a direction character.  They are:
.LP
.RS
.PD 0
.TP 21n
Up:
C-k, C-p, or <Up Arrow>
.TP
Down:
C-j, C-n, or <Down Arrow>
.TP
Page Up:
C-b, C-u, or <Page Up>
.TP
Page Down:
C-f, C-d, or <Page Down>
.PD
.RE
.LP
To enter a real C\-g to the shell, type it twice.  Navigation commands can be chained together - for example, typing C-g C-f C-f C-k will page down twice and then move up once.  The chain is broken when a non-navigation character is typed.
.LP
There are four other Viewglob commands.  After typing C-g:
.LP
.RS
.PD 0
.TP 21n
Set or clear mask:
<ENTER>
.TP
Toggle on/off:
C-<SPACE>
.TP
Raise window:
<TAB>
.TP
Disable:
C-q
.PD
.RE
.LP
Toggling will close the display if it's active or open it if not.
.LP
Raising will bring either the terminal window or the display to the front of the screen (whichever one isn't active).  If the display did not automatically update to the current shell after a window shuffle (i.e. it's showing the environment of a different shell), this will also knock it back to sense.
.LP
Disabling Viewglob functionality disconnects the terminal from vgd and turns vgseer off, resulting in an almost regular shell.  There is no way to re-enable Viewglob in a shell which has been disabled.
.RE
.PP
\fBFilename Masking\fP
.RS 4
File masking is a way to control the number and type of files shown in the display.  The default mask is "*", which shows all non-hidden files.  To show ALL files, an appropriate mask would be ".* *".  To show only C source files, the mask could be "*.[ch]" or "*.c *.h".  To just display directory file types, the mask would be "*/".
.LP
A mask can be set with the key sequence C-g [mask] <ENTER>.  The mask string will print in the display as it's being typed.  Typing a non-printable character (such as <ESC> or C-c) while creating a new mask will cancel it.  The mask can be set back to the default "*" with a simple C-g <ENTER>.
.LP
File masking is done on the client level.  Therefore, when using Viewglob with a remote machine, a conservative file mask could improve response time a little.
.RE
.PP
\fBFile/Directory Name Insertion\fP
.RS 4
The name of any file or directory can be passed to the terminal by double left\-clicking.  If shift is held, the full path of the file or directory is passed.  Insertion works as follows:
.LP
.RS 4
If you are currently at the command line (i.e. the shell has control of the terminal):
.PD 0
.TP 2
-
Special characters (*, ?, !, etc.) are escaped.
.TP
-
If there is no whitespace to the left of the cursor, a space is prepended to the inserted text.
.TP
-
If there is no whitespace to the right of the cursor, a space is appended to the inserted text.
.PD
.RE
.LP
.RS 4
If you are executing another program in the terminal (say a text editor or something):
.PD 0
.TP 2
-
The text is inserted as\-is, without any escaping or spacing.
.PD
.RE
.LP
Note that insertion of file names works pretty much the same as just pasting text into the terminal \-\- it's interpreted only as a series of keystrokes.  This means it's your responsibility to be sure that the shell is in a state cooperative to the reception of text.  For example, if you use vi\-mode in your shell, and you insert a file name while you're in command mode, the shell will receive the data as a series of commands \- probably not what you wanted to do.
.RE
.RE

.SH FILES
.I ~/viewglob/vgseer.conf
.br
.I ~/viewglob/vgd.conf
.IP
If present, these file specify a default configuration for Viewglob.  See the manuals for
.BR vgseer (1)
and
.BR vgd (1)
for more information.

.SH NOTES
First of all, when I say below \*(lqsuch\-and\-such feature of bash/zsh doesn't work in Viewglob\*(rq, I just mean that the display will not show expansion information for that feature.  The functionality of both shells is UNCHANGED by running Viewglob.  Anyhow.
.PP
Unfortunately, I haven't found a good way to predict history expansion (stuff involving the special char \*(lq!\*(rq).  The Viewglob display will pretend any construction starting with an unescaped ! does not exist.  Exceptions: a ! by itself, or the !(foo) pattern match.
.PP
A Viewglob'd shell session will not extend to subshells.  That is, if while in a Viewglob session you run, say, \*(lq\fIbash\fP\*(rq or \*(lq\fIsu\fP\*(rq, Viewglob will probably be temporarily disabled until you exit the new shell.  This is a consequence of Viewglob's implementation, but I'd probably keep this behaviour even if I could get around it.
.PP
Since Viewglob doesn't track changes in shell variables, I've decided to take out variable interpretation entirely.  If Viewglob sees what it thinks is a variable in its command line, it'll stop processing it until it's removed.  The variables will of course work fine in the shell itself.
.PP
While running Viewglob, don't unset or change the following variables and functions.
.IP
In bash: \fIPS1\fP, \fIPROMPT_COMMAND\fP, \fIhistchars\fP;
.br
In zsh:  \fIPROMPT\fP (or \fIPS1\fP), \fIRPROMPT\fP, \fIprecmd\fP, \fITRAPHUP\fP;
.PP
Viewglob would probably become confused.  Note that if you do change one of these (maybe you were curious, or you just forgot), it won't affect the shell you were using, just the display.
.br
If you want to modify these variables, do so outside of a Viewglob session, or put your changes in the shell's run control file.
.PP
Only the first command in a compound command will be interpreted by Viewglob.  For example, as you type:
.IP
$ mv *.jp{e,}g ~/photos/ && rm *
.PP
Viewglob will stop listening when it sees \*(lq&&\*(rq, and the display will only register *.jp{e,}g.  This isn't an implementation problem \- it's just that showing globbing for the subsequent commands could be deceptive, as the filesystem could be changed by executing the first command (as it is in this case).
.PP
Command substitution (stuff with backticks (`) or $(command)) is ignored by Viewglob for the reason given above.  Works fine in your shell though.
.PP
The display will not interpret aliases in zsh.

For more information, please visit:
.IP
\fIhttp://viewglob.sourceforge.net/\fP

.SH BUGS
.PP
Command line tracking seems to be pretty good for general use, but is far from perfect.
.PP
Resizing the terminal window after you've typed a multi\-line command will often cause Viewglob's command line to become temporarily out of sync with the true command line, though it tries really hard to keep up.  No big deal if this happens \-\- Viewglob should be in sync by the start of the next command.
.PP
Tabbed terminal programs confuse Viewglob.
.PP
And there are certainly others.  If you spot any bugs (and they aren't explained by \fBNOTES\fP above), send me a message, okay?  Ideas and code contributions are also very welcome.
.SH AUTHORS
Stephen Bach <sjbach@users.sourceforge.net>
.SH SEE ALSO
.BR bash (1),
.BR zsh (1),
.BR ls (1),
.BR glob (7),
.BR dir_colors (5).

